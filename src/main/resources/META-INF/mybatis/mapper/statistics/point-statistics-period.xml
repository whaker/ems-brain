<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.identity.ems.mapper.statistics.PointPeriodStatisticsMapper">
	<update id="createTable">
	<![CDATA[
        CREATE TABLE IF NOT EXISTS `STATISTICS_POINT_P_${buildingIdx}` (
          `DATE` char(8) NOT NULL COMMENT '통계일자',
          `TIME` char(4) NOT NULL COMMENT '통계시간',
          `POIT_LIST_IX` bigint(20) unsigned NOT NULL COMMENT '포인트정보 시퀀스',
          `PERIOD_TYPE_CD` varchar(15) NOT NULL COMMENT '기간형태 코드',
          `POINT_SUM` decimal(20,5) NOT NULL DEFAULT '0.00000' COMMENT '포인트 합산값',
          `POINT_AVG` decimal(20,5) NOT NULL DEFAULT '0.00000' COMMENT '포인트 평균값',
          `POINT_CNT` smallint(6) NOT NULL DEFAULT '0.00000' COMMENT '포인트 측정개수',
          `EXT_INPUT_FLAG` char(1) NOT NULL DEFAULT 'N' COMMENT '외부입력 여부',
          `CREATE_ID` varchar(12) NOT NULL COMMENT '생성ID',
          `CREATE_DATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '생성날짜',
          `UPDATE_ID` varchar(12) DEFAULT NULL COMMENT '변경ID',
          `UPDATE_DATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '변경날짜',
          PRIMARY KEY (`POIT_LIST_IX`,`PERIOD_TYPE_CD`,`DATE`,`TIME`)
        ) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='포인트 기간통계_#빌딩정보 시퀀스#';
	]]>
	</update>
	<insert id="saveForHour">
	<![CDATA[
		INSERT INTO STATISTICS_POINT_P_${buildingIdx} (
			DATE,
			TIME,
			PERIOD_TYPE_CD,
			POIT_LIST_IX,
			POINT_SUM,
			POINT_AVG,
			POINT_CNT,
			EXT_INPUT_FLAG,
			CREATE_ID)
		SELECT * FROM
		    (SELECT DATE,
				CONCAT(SUBSTR(TIME,1,2),'00'),
				'H',
				SPR.POIT_LIST_IX,
				SUM(CASE WHEN PL.POINT_VALUE_TYPE_CD = '01'
						 THEN IFNULL(SPR.POINT_VALUE,0.0)
						 ELSE IFNULL(SPR.POINT_CHANGE_VALUE,0.0) END) SUM_VALUE,
				AVG(CASE WHEN PL.POINT_VALUE_TYPE_CD = '01'
						 THEN IFNULL(SPR.POINT_VALUE,0.0)
						 ELSE IFNULL(SPR.POINT_CHANGE_VALUE,0.0) END) AVG_VALUE,
				COUNT(*) AS POINT_CNT,
				'N',
				'SYSTEM'
			FROM STATISTICS_POINT_R_${buildingIdx} AS SPR, POINT AS PL
			WHERE PL.POIT_LIST_IX = SPR.POIT_LIST_IX
			AND DATE = '${date}' AND SUBSTR(TIME,1,2) = SUBSTR('${time}',1,2)
			GROUP BY POIT_LIST_IX) AS NEW
		ON DUPLICATE KEY UPDATE
		    POINT_SUM = NEW.SUM_VALUE,
		    POINT_AVG = NEW.AVG_VALUE,
		    POINT_CNT = NEW.POINT_CNT
	]]>
	</insert>

	<insert id="saveForDay">
		<![CDATA[
		INSERT INTO STATISTICS_POINT_P_${buildingIdx} (
			DATE,
			TIME,
			PERIOD_TYPE_CD,
			POIT_LIST_IX,
			POINT_SUM,
			POINT_AVG,
			POINT_CNT,
			EXT_INPUT_FLAG,
			CREATE_ID)
		SELECT * FROM
			(SELECT DATE,
				'0000',
				'D',
				SPP.POIT_LIST_IX,
				SUM(SPP.POINT_SUM) AS POINT_SUM,
				AVG(SPP.POINT_AVG) AS POINT_AVG,
				COUNT(*) AS POINT_CNT,
				'N',
				'SYSTEM'
			FROM STATISTICS_POINT_P_${buildingIdx} AS SPP, POINT AS PL
			WHERE PL.POIT_LIST_IX = SPP.POIT_LIST_IX
			AND DATE = '${date}' AND SPP.PERIOD_TYPE_CD = 'H'
			GROUP BY POIT_LIST_IX) AS NEW
		ON DUPLICATE KEY UPDATE
		    POINT_SUM = NEW.POINT_SUM,
		    POINT_AVG = NEW.POINT_AVG,
		    POINT_CNT = NEW.POINT_CNT
	]]>
	</insert>

	<insert id="saveForMonth">
		<![CDATA[
		INSERT INTO STATISTICS_POINT_P_${buildingIdx} (
			DATE,
			TIME,
			PERIOD_TYPE_CD,
			POIT_LIST_IX,
			POINT_SUM,
			POINT_AVG,
			POINT_CNT,
			EXT_INPUT_FLAG,
			CREATE_ID)
		SELECT * FROM
			(SELECT CONCAT(SUBSTR(DATE,1,6),'00'),
				'0000',
				'M',
				SPP.POIT_LIST_IX,
				SUM(SPP.POINT_SUM) AS POINT_SUM,
				AVG(SPP.POINT_AVG) AS POINT_AVG,
				COUNT(*) AS POINT_CNT,
				'N',
				'SYSTEM'
			FROM STATISTICS_POINT_P_${buildingIdx} AS SPP, POINT AS PL
			WHERE PL.POIT_LIST_IX = SPP.POIT_LIST_IX
			AND SUBSTR(DATE,1,6) = SUBSTR('${date}',1,6) AND SPP.PERIOD_TYPE_CD = 'D'
			GROUP BY POIT_LIST_IX) AS NEW
		ON DUPLICATE KEY UPDATE
		    POINT_SUM = NEW.POINT_SUM,
		    POINT_AVG = NEW.POINT_AVG,
		    POINT_CNT = NEW.POINT_CNT
	]]>
	</insert>
	<insert id="saveForYear">
		<![CDATA[
		INSERT INTO STATISTICS_POINT_P_${buildingIdx} (
			DATE,
			TIME,
			PERIOD_TYPE_CD,
			POIT_LIST_IX,
			POINT_SUM,
			POINT_AVG,
			POINT_CNT,
			EXT_INPUT_FLAG,
			CREATE_ID)
		SELECT * FROM
			(SELECT CONCAT(SUBSTR(DATE,1,4),'0000'),
				'0000',
				'Y',
				SPP.POIT_LIST_IX,
				SUM(SPP.POINT_SUM) AS POINT_SUM,
				AVG(SPP.POINT_AVG) AS POINT_AVG,
				COUNT(*) AS POINT_CNT,
				'N',
				'SYSTEM'
			FROM STATISTICS_POINT_P_${buildingIdx} AS SPP, POINT AS PL
			WHERE PL.POIT_LIST_IX = SPP.POIT_LIST_IX
			AND SUBSTR(DATE,1,4) = SUBSTR('${date}',1,4) AND SPP.PERIOD_TYPE_CD = 'M'
			GROUP BY POIT_LIST_IX) AS NEW
	  	ON DUPLICATE KEY UPDATE
		    POINT_SUM = NEW.POINT_SUM,
		    POINT_AVG = NEW.POINT_AVG,
		    POINT_CNT = NEW.POINT_CNT
	]]>
	</insert>
</mapper>
